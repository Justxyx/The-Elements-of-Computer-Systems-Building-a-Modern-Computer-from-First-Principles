// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux4Way.hdl

/**
 * 4-way demultiplexor:
 * {a, b, c, d} = {in, 0, 0, 0} if sel == 00
 *                {0, in, 0, 0} if sel == 01
 *                {0, 0, in, 0} if sel == 10
 *                {0, 0, 0, in} if sel == 11
 * 从上述代码可以发现 ab 的第二位都是 0，cd 的第二位都是 1
 * 利用这一特性先对 sel 的第二位进行一个 DMux 操作
 * 如果第二位是 0，它只有两种可能：ab，如果是 1，则是 cd
 * 然后再对 sel 的第一位进行操作，对于 ab 来说，第一位为 0 则是 a，否则为 b
 * 对于 cd 来说，第一位为 0 则是 c，否则为 d
 */

CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    PARTS:
    DMux(in=in, sel=sel[1], a=l1, b=l2);
    DMux(in=l1, sel=sel[0], a=a, b=b);
    DMux(in=l2, sel=sel[0], a=c, b=d);
}